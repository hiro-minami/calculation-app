{"version":3,"sources":["utils/index.ts","App.tsx","index.tsx"],"names":["priority","Map","set","InputHelper","str","char","this","hasPeriod","isOperand","length","operand","split","includes","undefined","get","OperatorHelper","trimZeroHelper","charAt","substring","trimZero","operandStack","operatorStack","operate","optimizeNumber","toFixed","ans","num1","pop","num2","operator","push","Number","isInteger","toString","App","useState","formula","setFormula","result","setResult","addFormulaForOperator","e","preventDefault","canInputOperator","target","value","addFormulaForOperand","className","type","onClick","canCalculate","expression","i","ope","num","parseFloat","expressionParser","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a4779172.chunk.js","sourcesContent":["// 優先順位\nconst priority = new Map<string, number>();\npriority.set(\"+\", 0);\npriority.set(\"-\", 0);\npriority.set(\"×\", 1);\npriority.set(\"÷\", 1);\npriority.set(\"%\", 1);\npriority.set(\"noOperator\", -1);\n\n// 入力用のヘルパークラス\nexport class InputHelper {\n  public static canInputOperator(str: string, char: string): boolean {\n    if (char === \".\" && this.hasPeriod(str) === true) return false;\n    return this.isOperand(str[str.length - 1]) === true;\n  }\n  public static canCalculate(str: string): boolean {\n    return this.isOperand(str[str.length - 1]) === true;\n  }\n  private static hasPeriod(str: string): boolean {\n    const operand = str.split(/[+|\\-|×|÷|%]/g);\n    return operand[operand.length - 1].includes(\".\");\n  }\n  private static isOperand(char: string): boolean {\n    if (!char) return false;\n    return priority.get(char) === undefined;\n  }\n}\n\n// 計算用のヘルパークラス\nexport class OperatorHelper {\n  private static trimZero(str: string): string {\n    return this.trimZeroHelper(str, str.length - 1);\n  }\n  private static trimZeroHelper(str: string, length: number): string {\n    if (\n      length <= 0 ||\n      (str.charAt(length) !== \"0\" && str.charAt(length) !== \".\")\n    )\n      return str;\n    return this.trimZeroHelper(str.substring(0, length), length - 1);\n  }\n  public static optimizeNumber(str: string): string {\n    return str.includes(\".\") ? this.trimZero(str) : str;\n  }\n  public static operate(\n    operandStack: number[],\n    operatorStack: string[],\n    operate: string = \"noOperator\"\n  ): string {\n    if (operatorStack.length === 0)\n      return this.optimizeNumber(operandStack[0].toFixed(5));\n    let ans = 0;\n    while (\n      operatorStack.length !== 0 &&\n      priority.get(operatorStack[operatorStack.length - 1])! >=\n        priority.get(operate)!\n    ) {\n      let num1 = operandStack.pop();\n      let num2 = operandStack.pop();\n      let operator = operatorStack.pop();\n      if (operator === \"+\") ans = num2! + num1!;\n      else if (operator === \"-\") ans = num2! - num1!;\n      else if (operator === \"×\") ans = num2! * num1!;\n      else if (operator === \"÷\") ans = num2! / num1!;\n      else if (operator === \"%\") ans = num2! % num1!;\n      // 計算結果をスタックに追加\n      operandStack.push(ans);\n    }\n    return Number.isInteger(ans)\n      ? ans.toString()\n      : this.trimZero(ans.toFixed(5));\n  }\n}\n\nexport const expressionParser = (expression: string): string => {\n  // stack\n  let operandStack: number[] = [];\n  let operatorStack: string[] = [];\n  let i = 0;\n  while (i < expression.length) {\n    // オペランドの場合\n    if (priority.get(expression.charAt(i)) === undefined) {\n      let ope = \"\";\n      let num = 0;\n      while (\n        priority.get(expression.charAt(i + num)) === undefined &&\n        i + num < expression.length\n      ) {\n        ope += expression.charAt(i + num);\n        num++;\n      }\n      operandStack.push(parseFloat(ope));\n      i += num;\n    } else {\n      // 演算子の場合\n      if (operatorStack.length === 0) {\n        // 演算子スタックが空の場合は、それを演算子スタックにプッシュ\n        operatorStack.push(expression.charAt(i));\n      } else if (\n        priority.get(operatorStack[operatorStack.length - 1])! <\n        priority.get(expression.charAt(i))!\n      ) {\n        // 演算子スタックが空ではなく、その文字の優先順位が演算子スタックの頂上の優先順位よりも大きい場合、その文字を演算子スタックにプッシュ\n        operatorStack.push(expression.charAt(i));\n      } else {\n        // 計算する\n        OperatorHelper.operate(\n          operandStack,\n          operatorStack,\n          expression.charAt(i)\n        );\n        // 計算結果をoperandStackに入れる\n        operatorStack.push(expression.charAt(i));\n      }\n      i++;\n    }\n  }\n  return operatorStack[0] !== null\n    ? OperatorHelper.operate(operandStack, operatorStack)\n    : OperatorHelper.optimizeNumber(operandStack[0].toFixed(5));\n};\n","import React, { useState } from \"react\";\nimport { InputHelper, OperatorHelper, expressionParser } from \"./utils\";\nimport \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nconst App = () => {\n  // state\n  const [formula, setFormula] = useState(\"\");\n  const [result, setResult] = useState(\"0\");\n\n  // event\n  const restart = (e: any) => {\n    e.preventDefault();\n    setFormula(\"\");\n    setResult(\"0\");\n  };\n  const changeCord = (e: any) => {\n    e.preventDefault();\n    setResult(OperatorHelper.optimizeNumber((+result * -1).toFixed(5)));\n  };\n  const addFormulaForOperator = (e: any) => {\n    e.preventDefault();\n    if (InputHelper.canInputOperator(formula, e.target.value) === true) {\n      setFormula(formula + e.target.value);\n    }\n  };\n  const addFormulaForOperand = (e: any) => {\n    e.preventDefault();\n    setFormula(formula + e.target.value);\n  };\n  const calculate = (e: any) => {\n    e.preventDefault();\n    if (\n      formula !== \"\" &&\n      InputHelper.canCalculate(formula[formula.length - 1]) === true\n    )\n      setResult(expressionParser(formula));\n    setFormula(\"\");\n  };\n\n  return (\n    <div className=\"container\">\n      <div className=\"col-sm-8 col-md-6 col-lg-3 m-5 bg-black rounded transparency\">\n        <div className=\"display-parent display\">\n          <div className=\"text-end fs-3 font-light m-1\">{formula}</div>\n          <div className=\"text-end font-lg display-answer font-light m-1\">\n            {result}\n          </div>\n        </div>\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className=\"bg-command btn-lg col-3 rounded transparency-button font-light\"\n            onClick={restart}\n          >\n            AC\n          </button>\n          <button\n            type=\"button\"\n            className=\"bg-command btn-lg col-3 rounded transparency-button font-light\"\n            onClick={changeCord}\n          >\n            +/-\n          </button>\n          <button\n            type=\"button\"\n            className=\"bg-command btn-lg col-3 rounded transparency-button font-light\"\n            value=\"%\"\n            onClick={addFormulaForOperator}\n          >\n            %\n          </button>\n          <button\n            type=\"button\"\n            className=\"bg-operator btn-lg col-3 rounded font-light\"\n            value=\"÷\"\n            onClick={addFormulaForOperator}\n          >\n            ÷\n          </button>\n          <button\n            type=\"button\"\n            className=\"bg-secondary btn-lg col-3 rounded font-light\"\n            value=\"7\"\n            onClick={addFormulaForOperand}\n          >\n            7\n          </button>\n          <button\n            type=\"button\"\n            className=\"bg-secondary btn-lg col-3 rounded font-light\"\n            value=\"8\"\n            onClick={addFormulaForOperand}\n          >\n            8\n          </button>\n          <button\n            type=\"button\"\n            className=\"bg-secondary btn-lg col-3 rounded font-light\"\n            value=\"9\"\n            onClick={addFormulaForOperand}\n          >\n            9\n          </button>\n          <button\n            type=\"button\"\n            className=\"bg-operator btn-lg col-3 rounded font-light\"\n            value=\"×\"\n            onClick={addFormulaForOperator}\n          >\n            ×\n          </button>\n          <button\n            type=\"button\"\n            className=\"bg-secondary btn-lg col-3 rounded font-light\"\n            value=\"4\"\n            onClick={addFormulaForOperand}\n          >\n            4\n          </button>\n          <button\n            type=\"button\"\n            className=\"bg-secondary btn-lg col-3 rounded font-light\"\n            value=\"5\"\n            onClick={addFormulaForOperand}\n          >\n            5\n          </button>\n          <button\n            type=\"button\"\n            className=\"bg-secondary btn-lg col-3 rounded font-light\"\n            value=\"6\"\n            onClick={addFormulaForOperand}\n          >\n            6\n          </button>\n          <button\n            type=\"button\"\n            className=\"bg-operator btn-lg col-3 rounded font-light\"\n            value=\"-\"\n            onClick={addFormulaForOperator}\n          >\n            -\n          </button>\n          <button\n            type=\"button\"\n            className=\"bg-secondary btn-lg col-3 rounded font-light\"\n            value=\"1\"\n            onClick={addFormulaForOperand}\n          >\n            1\n          </button>\n          <button\n            type=\"button\"\n            className=\"bg-secondary btn-lg col-3 rounded font-light\"\n            value=\"2\"\n            onClick={addFormulaForOperand}\n          >\n            2\n          </button>\n          <button\n            type=\"button\"\n            className=\"bg-secondary btn-lg col-3 rounded font-light\"\n            value=\"3\"\n            onClick={addFormulaForOperand}\n          >\n            3\n          </button>\n          <button\n            type=\"button\"\n            className=\"bg-operator btn-lg col-3 rounded font-light\"\n            value=\"+\"\n            onClick={addFormulaForOperator}\n          >\n            +\n          </button>\n          <button\n            type=\"button\"\n            className=\"bg-secondary btn-lg col-6 rounded font-light\"\n            value=\"0\"\n            onClick={addFormulaForOperand}\n          >\n            0\n          </button>\n          <button\n            type=\"button\"\n            className=\"bg-secondary btn-lg col-3 rounded font-light\"\n            value=\".\"\n            onClick={addFormulaForOperator}\n          >\n            .\n          </button>\n          <button\n            type=\"button\"\n            className=\"bg-operator btn-lg col-3 rounded font-light\"\n            onClick={calculate}\n          >\n            =\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}